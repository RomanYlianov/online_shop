@model onlineshop.Services.DTO.CommentDTO

@{
    ViewBag.Title = "Comment";
}

<h2>Comment</h2>

@using (Html.BeginForm("Edit", "Comments", FormMethod.Post))
{

    @Html.AntiForgeryToken()
    @Html.HiddenFor(model=>model.Id)
    @Html.HiddenFor(model=>model.ProductDTOId)
    @Html.HiddenFor(model=>model.AuthorDTOId)

    <div class="container">

        <h4>Comment</h4>

        <br />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group row">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.ProductDTOId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductDTO.Name, new { htmlAttributes = new { @class = "form-control",  disabled = "disabled", @readonly = "readonly" } })

            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.AuthorDTOId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AuthorDTO.UserName, new { htmlAttributes = new { @class = "form-control",  disabled = "disabled", @readonly = "readonly"  } })

            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>

    </div>

}